{"version":3,"file":"component---src-pages-contact-js-b97314413f102a7024ce.js","mappings":"2MAIe,SAASA,EAAgBC,GAEpC,OACI,iBAC6BC,6BAA6BD,EAASA,WAU1E,kS,+GCVKE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkBD,OAlBCA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACFC,OAAA,WAAS,IAAD,QACEC,EAAQ,UAAGC,KAAKC,aAAR,iBAAG,EAAYC,YAAf,aAAG,EAAkBC,cAAcC,MAAM,GAAGC,KACpDC,EAAW,UAAGN,KAAKC,aAAR,iBAAG,EAAYC,YAAf,aAAG,EAAkBC,cAAcC,MAAM,GAAGC,KAAKE,cAAcC,kBAAkB,GAAGC,IAAIC,IACnGC,EAAWZ,EAASa,MAEpBC,EAAiBb,KAAKC,MAAMC,KAAKY,uBAAuBV,MAAM,GAAGC,KAAKE,cAAcQ,qBAAqB,GAAGN,IAAIC,IACtH,OACI,yBACI,QAAC,IAAD,CAAQE,MAAOD,EAAUK,OAAO,KAChC,QAAC,IAAD,CAAQC,SAAUjB,KAAKC,MAAMgB,SAAUC,UAAWP,EAAUQ,QAASb,IAChE,QAAC,IAAD,CAAiBX,SAAUkB,KAC5B,QAAC,IAAD,MACI,QAAC,IAAD,UAKnB,EAlBChB,CAAqBuB,EAAAA,WAqB3B","sources":["webpack://liveby-life-technologies/./src/components/parallax-divider.js","webpack://liveby-life-technologies/./src/pages/contact.js"],"sourcesContent":["import React from 'react'\r\nimport {css} from '@emotion/react'\r\n\r\n\r\nexport default function ParallaxDivider(imageUrl){\r\n    \r\n    return(\r\n        <div css={css`\r\n             background-image: url(${process.env.GATSBY_API_URL + imageUrl.imageUrl});\r\n             height: 40vh;\r\n             background-attachment:fixed;\r\n             background-position:center;\r\n             background-repeat: no-repeat;\r\n             background-size:cover;\r\n        `}>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {graphql} from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport Container from '../components/container'\r\nimport ParallaxDivider from '../components/parallax-divider'\r\nimport { Helmet } from 'react-helmet'\r\nimport ContactForm from '../components/contact'\r\n\r\nclass ContactIndex extends React.Component{\r\n    render(){\r\n        const siteData = this.props?.data?.allNodeDomain.edges[0].node\r\n        const siteNavLogo = this.props?.data?.allNodeDomain.edges[0].node.relationships.field_domain_logo[1].uri.url\r\n        const siteName = siteData.title\r\n        \r\n        const parallaxImages = this.props.data.allNodeParallaxDivider.edges[0].node.relationships.field_parallax_image[3].uri.url\r\n        return(\r\n            <>\r\n                <Helmet title={siteName} defer={false} />\r\n                <Layout location={this.props.location} siteTitle={siteName} navLogo={siteNavLogo}>\r\n                     <ParallaxDivider imageUrl={parallaxImages} />\r\n                    <Container>\r\n                        <ContactForm/>\r\n                    </Container>\r\n                </Layout>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactIndex\r\n\r\nexport const pageQuery = graphql`\r\nquery ContactData {\r\n    allNodeDomain {\r\n      edges {\r\n        node {\r\n          title\r\n          field_domain_slogan\r\n          body {\r\n            processed\r\n          }\r\n          relationships {\r\n            field_domain_logo {\r\n              filename\r\n              uri {\r\n                url\r\n              }\r\n              localFile {\r\n                childImageSharp {\r\n                  gatsbyImageData(width: 412, layout: CONSTRAINED, placeholder: TRACED_SVG)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    allNodeParallaxDivider(\r\n      filter: {field_dsmatch: {drupal_internal__target_id: {eq: 7}}, title: {eq: \"Index\"}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          title\r\n          relationships {\r\n            field_parallax_image {\r\n              uri{\r\n                url\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `"],"names":["ParallaxDivider","imageUrl","process","ContactIndex","render","siteData","this","props","data","allNodeDomain","edges","node","siteNavLogo","relationships","field_domain_logo","uri","url","siteName","title","parallaxImages","allNodeParallaxDivider","field_parallax_image","defer","location","siteTitle","navLogo","React"],"sourceRoot":""}